apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubectl-client
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubectl-client
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubectl-client
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubectl-client
subjects:
- kind: ServiceAccount
  name: kubectl-client
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: signallingserver
  labels:
    app: signallingserver
spec:
  ports:
  - port: 80
    targetPort: 80
    name: port80
  - port: 8888
    targetPort: 8888
    name: port8888
  selector:
    app: signallingserver 
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: signallingserver
  labels:
    app: signallingserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: signallingserver
  template:
    metadata:
      labels:
        app: signallingserver
    spec:
      serviceAccountName: kubectl-client
      initContainers:
      - name: init
        image: "fancy.azurecr.io/kubectlclient"
        command: ["sh"]
        args:
        - -c
        - |
          signallingLoadBalancerIP=""
          while [ -z "$signallingLoadBalancerIP" ]; do
              signallingLoadBalancerIP=$(kubectl get service signallingserver -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
              sleep 5
          done
          echo "signallingLoadBalancerIP=$signallingLoadBalancerIP" > /tmp/ip.txt
          turnLoadBalancerIP=""
          while [ -z "$turnLoadBalancerIP" ]; do
              turnLoadBalancerIP=$(kubectl get service turnserver -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
              sleep 5
          done
          echo "turnLoadBalancerIP=$turnLoadBalancerIP" >> /tmp/ip.txt
          # Delete the old configmap if it exists
          kubectl delete configmap signallingserver-config-ips --ignore-not-found
          kubectl create configmap signallingserver-config-ips --from-env-file=/tmp/ip.txt
          sleep 10    
      containers:
      - name: signallingserver
        image: fancy.azurecr.io/signallingwebserver:4.27
        envFrom:
        - configMapRef:
            name: signallingserver-config-ips
        args: 
          - --configFile=/config/signallingserver.json
          - --peerConnectionOptions={"iceServers":[{"urls":["turn:$(turnLoadBalancerIP):3478"],"username":"usr","credential":"usr123"}]}
          - --PublicIp=$(signallingLoadBalancerIP)
        ports:
        - containerPort: 80
        - containerPort: 8888
        volumeMounts:
        - name: pixel-streaming-config
          mountPath: /config
      - name: game
        image: fancy.azurecr.io/game:4.27
        env:
        -  name: SIGNALSERVER_URL
           value: ws://signallingserver:8888
      volumes:
        - name: pixel-streaming-config
          configMap:
            name: pixel-streaming-config
      tolerations:
      - key: "sku"
        operator: "Equal"
        value: "gpu"
        effect: "NoSchedule"