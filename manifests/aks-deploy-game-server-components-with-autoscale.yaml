apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubectl-client
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubectl-client
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - services
  - pods
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments/scale
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubectl-client
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubectl-client
subjects:
- kind: ServiceAccount
  name: kubectl-client
  namespace: default
---
# PixelStreaming Config
apiVersion: v1
kind: ConfigMap
metadata:
  name: pixel-streaming-config
data:
  matchmaker.json:  |
    {
    "HttpPort": "90",
    "UseHTTPS": "false",
    "MatchmakerPort": "9999",
    "LogToFile": "true"
    }
  signallingserver.json:  |
    {
      "UseFrontend": false,
      "UseMatchmaker": true,
      "UseHTTPS": false,
      "UseAuthentication": false,
      "LogToFile": true,
      "LogVerbose": true,
      "HomepageFile": "player.html",
      "AdditionalRoutes": {},
      "EnableWebserver": true,
      "MatchmakerAddress": "matchmaker",
      "MatchmakerPort": "9999",
      "PublicIp": "",
      "HttpPort": 80,
      "HttpsPort": 443,
      "StreamerPort": 8888,
      "SFUPort": 8889,
      "MaxPlayerCount": -1
    }
--- 

# MatchMaker Service
apiVersion: v1
kind: Service
metadata:
  name: matchmaker
  labels:
    app: matchmaker
spec:
  ports:
  - port: 90
    targetPort: 90
    name: port90
  - port: 9999
    targetPort: 9999
    name: port9999
  selector:
    app: matchmaker 
  type: LoadBalancer

--- 
# SignallingServer Service
apiVersion: v1
kind: Service
metadata:
  name: signallingserver
  labels:
    app: signallingserver
spec:
  ports:
  - port: 80
    targetPort: 80
    name: port80
  - port: 8888
    targetPort: 8888
    name: port8888
  selector:
    app: signallingserver 
  type: LoadBalancer
---
# TURN Server Service
apiVersion: v1
kind: Service
metadata:
  name: turnserver
  labels:
    app: turnserver
spec:
  ports:
  - port: 3478
    targetPort: 3478
    name: porttcp3478
    protocol: TCP
  selector:
    app: turnserver 
  type: LoadBalancer
---
# Deploy  MatchMaker
apiVersion: apps/v1
kind: Deployment
metadata:
  name: matchmaker
  labels:
    app: matchmaker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: matchmaker
  template:
    metadata:
      labels:
        app: matchmaker
    spec:
      containers:
      - name: matchmaker
        image: gbbpixel.azurecr.io/pixelstream/matchmaker:4.27
        ports:
        - containerPort: 90
        - containerPort: 9999
        volumeMounts:
        - name: pixel-streaming-config
          mountPath: /config
      volumes:
        - name: pixel-streaming-config
          configMap:
            name: pixel-streaming-config 


---
# Deploy SignallingServer
apiVersion: apps/v1
kind: Deployment
metadata:
  name: signallingserver
  labels:
    app: signallingserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: signallingserver
  template:
    metadata:
      labels:
        app: signallingserver
    spec:
      serviceAccountName: kubectl-client
      initContainers:
      - name: init
        image: "bitnami/kubectl:latest"
        command: ["sh"]
        args:
        - -c
        - |
          signallingLoadBalancerIP=""
          while [ -z "$signallingLoadBalancerIP" ]; do
              signallingLoadBalancerIP=$(kubectl get service signallingserver -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
              sleep 5
          done
          echo "signallingLoadBalancerIP=$signallingLoadBalancerIP" > /tmp/ip.txt
          turnLoadBalancerIP=""
          while [ -z "$turnLoadBalancerIP" ]; do
              turnLoadBalancerIP=$(kubectl get service turnserver -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
              sleep 5
          done
          echo "turnLoadBalancerIP=$turnLoadBalancerIP" >> /tmp/ip.txt
          # Delete the old configmap if it exists
          kubectl delete configmap signallingserver-config-ips --ignore-not-found
          kubectl create configmap signallingserver-config-ips --from-env-file=/tmp/ip.txt
          sleep 10    
      containers:
      - name: signallingserver
        image: gbbpixel.azurecr.io/pixelstream/signallingwebserver:4.27
        envFrom:
        - configMapRef:
            name: signallingserver-config-ips
        args: 
          - --configFile=/config/signallingserver.json
          - --peerConnectionOptions={"iceServers":[{"urls":["turn:$(turnLoadBalancerIP):3478"],"username":"usr","credential":"usr123"}]}
          - --PublicIp=$(signallingLoadBalancerIP)
        ports:
        - containerPort: 80
        - containerPort: 8888
        volumeMounts:
        - name: pixel-streaming-config
          mountPath: /config
        - name: signallingserver-logs
          mountPath: /opt/SignallingWebServer/logs
      - name: game
        image: gbbpixel.azurecr.io/pixelstream/game:4.27
        env:
        -  name: SIGNALSERVER_URL
           value: ws://signallingserver:8888
      - name: playermonitor
        image: gbbpixel.azurecr.io/pixelstream/playermonitor
        env:
        -  name: LOG_DIR
           value: "/opt/SignallingWebServer/logs"
        volumeMounts:
        - name: signallingserver-logs
          mountPath: /opt/SignallingWebServer/logs
      volumes:
        - name: pixel-streaming-config
          configMap:
            name: pixel-streaming-config
        - name: signallingserver-logs
          emptyDir: {}
      tolerations:
      - key: "sku"
        operator: "Equal"
        value: "gpu"
        effect: "NoSchedule"

---
# Kubernetes TURN Server DaemonSet
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: turnserver
  labels:
    app: turnserver
spec:
  selector:
    matchLabels:
      app: turnserver
  template:
    metadata:
      labels:
        app: turnserver
    spec:
      nodeSelector:
        "agentpool": "turnp"
      tolerations:
      - key: "sku"
        operator: "Equal"
        value: "turn"
        effect: "NoSchedule"   
      hostNetwork: true
      containers:
      - name: turnserver
        image: gbbpixel.azurecr.io/pixelstream/turn:latest
        ports:
        - containerPort: 3478
          protocol: UDP
          name: udp
        - containerPort: 3478
          protocol: TCP
          name: tcp

--- 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scalemonitor
  labels:
    app: scalemonitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scalemonitor
  template:
    metadata:
      labels:
        app: scalemonitor
    spec:
      serviceAccountName: kubectl-client
      containers:
      - name: scalemonitor
        image: gbbpixel.azurecr.io/pixelstream/scalemonitor